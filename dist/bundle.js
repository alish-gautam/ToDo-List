(()=>{"use strict";var n={284:(n,e,t)=>{t.d(e,{Z:()=>d});var r=t(537),i=t.n(r),a=t(645),o=t.n(a)()(i());o.push([n.id,".content{\n    background-color: rgba(128, 128, 128, 0.13);\n}\n.mytitle{\n    padding: 10px;\n}\n.descript{\n    padding: 10px;\n}\n.userInput{\n    display: flex;\n    flex-direction: column;\n    margin-top: 20px;\n    margin-left: 20px;\n    gap: 10px;\n}\n.userInput>*{\n    width: 20vw;\n    border-radius: 8px;\n}\n.buttondiv{\n    margin-left:20px;\n    margin-top: 10px;\n    display: flex;\n    gap: 10px;\n    /* border: 2px solid red; */\n}\n.buttondiv>*{\n    padding: 10px;\n    cursor: pointer;\n    border-radius: 8px;\n    font-size: 15px;\n    font-weight: 550;\n}\n.buttondiv>:first-child:hover{\n    background-color: rgba(0, 128, 0, 0.584);\n}\n.buttondiv>:nth-child(2):hover{\n    background-color: rgba(255, 255, 0, 0.646);\n}\n.buttondiv>:last-child:hover{\n    background-color: rgba(255, 0, 0, 0.642);\n}\n.confirmdiv{\n   margin: 20px 20px;\n}\n.confirmdiv>*{\n    padding: 10px;\n    font-size: 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: all 0.3s;\n}\n.confirmdiv>:first-child:hover{\n    background-color: rgba(0, 0, 255, 0.598);\n    color: white;\n}","",{version:3,sources:["webpack://./src/contentStyle.css"],names:[],mappings:"AAAA;IACI,2CAA2C;AAC/C;AACA;IACI,aAAa;AACjB;AACA;IACI,aAAa;AACjB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,gBAAgB;IAChB,iBAAiB;IACjB,SAAS;AACb;AACA;IACI,WAAW;IACX,kBAAkB;AACtB;AACA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,SAAS;IACT,2BAA2B;AAC/B;AACA;IACI,aAAa;IACb,eAAe;IACf,kBAAkB;IAClB,eAAe;IACf,gBAAgB;AACpB;AACA;IACI,wCAAwC;AAC5C;AACA;IACI,0CAA0C;AAC9C;AACA;IACI,wCAAwC;AAC5C;AACA;GACG,iBAAiB;AACpB;AACA;IACI,aAAa;IACb,eAAe;IACf,kBAAkB;IAClB,eAAe;IACf,oBAAoB;AACxB;AACA;IACI,wCAAwC;IACxC,YAAY;AAChB",sourcesContent:[".content{\n    background-color: rgba(128, 128, 128, 0.13);\n}\n.mytitle{\n    padding: 10px;\n}\n.descript{\n    padding: 10px;\n}\n.userInput{\n    display: flex;\n    flex-direction: column;\n    margin-top: 20px;\n    margin-left: 20px;\n    gap: 10px;\n}\n.userInput>*{\n    width: 20vw;\n    border-radius: 8px;\n}\n.buttondiv{\n    margin-left:20px;\n    margin-top: 10px;\n    display: flex;\n    gap: 10px;\n    /* border: 2px solid red; */\n}\n.buttondiv>*{\n    padding: 10px;\n    cursor: pointer;\n    border-radius: 8px;\n    font-size: 15px;\n    font-weight: 550;\n}\n.buttondiv>:first-child:hover{\n    background-color: rgba(0, 128, 0, 0.584);\n}\n.buttondiv>:nth-child(2):hover{\n    background-color: rgba(255, 255, 0, 0.646);\n}\n.buttondiv>:last-child:hover{\n    background-color: rgba(255, 0, 0, 0.642);\n}\n.confirmdiv{\n   margin: 20px 20px;\n}\n.confirmdiv>*{\n    padding: 10px;\n    font-size: 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: all 0.3s;\n}\n.confirmdiv>:first-child:hover{\n    background-color: rgba(0, 0, 255, 0.598);\n    color: white;\n}"],sourceRoot:""}]);const d=o},426:(n,e,t)=>{t.d(e,{Z:()=>d});var r=t(537),i=t.n(r),a=t(645),o=t.n(a)()(i());o.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Dosis:wght@200&family=Inconsolata:wght@300&family=Saira+Condensed:wght@100&display=swap);"]),o.push([n.id,'*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n.headingdiv{\n    display: flex;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.597);\n    color: white;\n    padding: 15px;\n    grid-column: 1/3;\n}\n.titleImg{\n    width: 50px;\n}\n.heading{\n    font-size: 60px;\n    font-family: Dosis;\n}\n.container{\n    width: 60%;\n    margin: auto;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n}\n.sidebar{\n    background-color: #dddddd;\n    display: flex;\n    flex-direction: column;\n    padding-left: 30px;\n    gap: 20px;\n    padding-top: 30px;\n    height: minmax(100vh,auto);\n    height: auto;\n    padding-right: 20px;\n    height:96vh;\n}\n.topElements>*{\n    font-size: 25px;\n    padding: 10px;\n    border-radius: 10px;\n    cursor: pointer;\n}\n.sidebar_divs{\n    display: flex;\n    gap: 10px;\n}\n.sidebarIcons{\n    width: 25px;\n}\n.topElements>*:hover{\n    background-color: rgba(0, 0, 0, 0.214);\n}\n.project_title{\n    font-size: 20px;\n}\n.addIcon{\n    width: 60px;\n}\n.projects>.project_title:hover{\n    background-color: "none";\n}\n.addIcon{\n    cursor: pointer;\n}\n\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AACA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,sCAAsC;IACtC,YAAY;IACZ,aAAa;IACb,gBAAgB;AACpB;AACA;IACI,WAAW;AACf;AACA;IACI,eAAe;IACf,kBAAkB;AACtB;AACA;IACI,UAAU;IACV,YAAY;IACZ,aAAa;IACb,8BAA8B;AAClC;AACA;IACI,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,SAAS;IACT,iBAAiB;IACjB,0BAA0B;IAC1B,YAAY;IACZ,mBAAmB;IACnB,WAAW;AACf;AACA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,eAAe;AACnB;AACA;IACI,aAAa;IACb,SAAS;AACb;AACA;IACI,WAAW;AACf;AACA;IACI,sCAAsC;AAC1C;AACA;IACI,eAAe;AACnB;AACA;IACI,WAAW;AACf;AACA;IACI,wBAAwB;AAC5B;AACA;IACI,eAAe;AACnB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Dosis:wght@200&family=Inconsolata:wght@300&family=Saira+Condensed:wght@100&display=swap');\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n.headingdiv{\n    display: flex;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.597);\n    color: white;\n    padding: 15px;\n    grid-column: 1/3;\n}\n.titleImg{\n    width: 50px;\n}\n.heading{\n    font-size: 60px;\n    font-family: Dosis;\n}\n.container{\n    width: 60%;\n    margin: auto;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n}\n.sidebar{\n    background-color: #dddddd;\n    display: flex;\n    flex-direction: column;\n    padding-left: 30px;\n    gap: 20px;\n    padding-top: 30px;\n    height: minmax(100vh,auto);\n    height: auto;\n    padding-right: 20px;\n    height:96vh;\n}\n.topElements>*{\n    font-size: 25px;\n    padding: 10px;\n    border-radius: 10px;\n    cursor: pointer;\n}\n.sidebar_divs{\n    display: flex;\n    gap: 10px;\n}\n.sidebarIcons{\n    width: 25px;\n}\n.topElements>*:hover{\n    background-color: rgba(0, 0, 0, 0.214);\n}\n.project_title{\n    font-size: 20px;\n}\n.addIcon{\n    width: 60px;\n}\n.projects>.project_title:hover{\n    background-color: \"none\";\n}\n.addIcon{\n    cursor: pointer;\n}\n\n"],sourceRoot:""}]);const d=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(o[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&o[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(i," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},o=[],d=0;d<n.length;d++){var c=n[d],s=r.base?c[0]+r.base:c[0],l=a[s]||0,A="".concat(s," ").concat(l);a[s]=l+1;var p=t(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var C=i(u,r);r.byIndex=d,e.splice(d,0,{identifier:A,updater:C,references:1})}o.push(A)}return o}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var a=r(n=n||[],i=i||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var d=t(a[o]);e[d].references--}for(var c=r(n,i),s=0;s<a.length;s++){var l=t(a[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var i=r.length-1;i>-1&&!n;)n=r[i--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),i=t.n(r),a=t(569),o=t.n(a),d=t(565),c=t.n(d),s=t(216),l=t.n(s),A=t(589),p=t.n(A),u=t(426),C={};C.styleTagTransform=p(),C.setAttributes=c(),C.insert=o().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=l(),e()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;var m=t(284),g={};g.styleTagTransform=p(),g.setAttributes=c(),g.insert=o().bind(null,"head"),g.domAPI=i(),g.insertStyleElement=l(),e()(m.Z,g),m.Z&&m.Z.locals&&m.Z.locals;const h=t.p+"7ca7a40669caa49939ba.png",f=t.p+"68ee9be4bf2ae86f6bd0.png",b=t.p+"df67eb905b031c0f0171.png",I=t.p+"98c2e7d507642d6be519.png",v=t.p+"174a0147071c43be66d4.png";const x=t.p+"40bec6b86d18dddda41d.png";!function(){let n=document.querySelector(".container");n.classList.add("container");let e=document.createElement("div");e.classList.add("headingdiv");let t=document.createElement("h1");t.classList.add("heading"),t.innerText="TODO";let r=new Image;r.classList.add("titleImg"),r.src=x,e.appendChild(r),e.appendChild(t),n.appendChild(e),function(){let n=document.querySelector(".container"),e=document.createElement("div");e.classList.add("sidebar");let t=document.createElement("div");t.classList.add("topElements");let r=document.createElement("div");r.classList.add("sidebar_divs");let i=new Image;i.classList.add("sidebarIcons"),i.src=I;let a=document.createElement("p");a.innerText="Home",r.appendChild(i),r.appendChild(a);let o=document.createElement("div");o.classList.add("sidebar_divs");let d=new Image;d.src=f,d.classList.add("sidebarIcons");let c=document.createElement("p");c.innerText="Today",o.appendChild(d),o.appendChild(c);let s=document.createElement("div");s.classList.add("sidebar_divs");let l=new Image;l.src=b,l.classList.add("sidebarIcons");let A=document.createElement("p");A.innerText="This Week",s.appendChild(l),s.appendChild(A);let p=document.createElement("div");p.classList.add("sidebar_divs");let u=new Image;u.src=h,u.classList.add("sidebarIcons");let C=document.createElement("p");C.innerText="All Time",p.appendChild(u),p.appendChild(C),a.click();let m=document.createElement("div");m.classList.add("projects");let g=document.createElement("h1");g.innerText="Projects",m.classList.add("project_title"),m.appendChild(g);let x=document.createElement("div"),B=new Image;B.src=v,B.classList.add("addIcon"),x.appendChild(B),t.appendChild(r),t.appendChild(o),t.appendChild(s),t.appendChild(p),e.appendChild(t),e.appendChild(m),e.appendChild(x),n.appendChild(e);let y=t.childNodes,w=null;y.forEach((n=>{n.addEventListener("click",(()=>{w&&(w.style.fontWeight=""),n.style.fontWeight="bold",w=n}))})),window.addEventListener("load",(()=>{a.click()})),B.addEventListener("click",(()=>{B.style.display="none",function(){let n=document.querySelector(".container"),e=document.createElement("div");e.classList.add("content");let t=document.createElement("div");t.classList.add("userInput");let r=document.createElement("input");r.classList.add("mytitle"),r.placeholder="Title eg: Weekend, New Year",r.classList.add("inputTitle");let i=r.value;document.createElement("h1").innerText=i;let a=document.createElement("div");a.classList.add("confirmdiv");let o=document.createElement("button");o.innerText="Confirm",a.appendChild(o),t.appendChild(r),e.appendChild(t),e.appendChild(a),n.appendChild(e),o.addEventListener("click",(()=>{!function(){let n=document.querySelector(".container"),e=document.querySelector(".content"),t=document.querySelector(".userInput"),r=document.querySelector(".confirmdiv");e.removeChild(t),e.removeChild(r);let i=document.createElement("input");i.placeholder="eg:drink water, pay bills";let a=document.createElement("input");a.placeholder="Description eg: Party, Nightclub",a.classList.add("descript");let o=a.value;document.createElement("p").innerText=o;let d=document.createElement("div");d.classList.add("buttondiv");let c=document.createElement("button");c.innerText="Low";let s=document.createElement("button");s.innerText="Medium";let l=document.createElement("button");l.innerText="High",d.appendChild(c),d.appendChild(s),d.appendChild(l),t.appendChild(i),t.appendChild(a),e.appendChild(t),e.appendChild(d),n.appendChild(e)}()}))}()}))}()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,